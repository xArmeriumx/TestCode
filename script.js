(() => {
  console.log("ЁЯЪА р╣Ар╕гр╕┤р╣Ир╕бр╕Бр╕гр╕░р╕Ър╕зр╕Щр╕Бр╕▓р╕гр╕Ир╕нр╕З...");

  if (!window.location.href.includes("popmartth.rocket-booking.app/booking")) {
    console.warn("тЫФ р╕Др╕╕р╕Ур╣Др╕бр╣Ир╣Др╕Фр╣Йр╕нр╕вр╕╣р╣Ир╣Гр╕Щр╕лр╕Щр╣Йр╕▓р╕Ир╕нр╕З! р╕Бр╕гр╕╕р╕Ур╕▓р╣Ар╕Ыр╕┤р╕Ф https://popmartth.rocket-booking.app/booking");
    alert("тЫФ р╕Бр╕гр╕╕р╕Ур╕▓р╣Ар╕Ыр╕┤р╕Фр╕лр╕Щр╣Йр╕▓ 'Booking' р╕Бр╣Ир╕нр╕Щр╣Ар╕гр╕┤р╣Ир╕бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ!");
    if (typeof completion === "function") completion("тЭМ р╣Др╕бр╣Ир╣Гр╕Кр╣Ир╕лр╕Щр╣Йр╕▓р╕Ир╕нр╕З");
    return;
  }

  const waitForElementWithText = (selector, text) => {
    return new Promise((resolve) => {
      const interval = setInterval(() => {
        const elements = Array.from(document.querySelectorAll(selector));
        const targetElement = elements.find(
          (el) => el.textContent.trim() === text
        );
        if (targetElement) {
          clearInterval(interval);
          resolve(targetElement);
        }
      }, 100);
    });
  };

  const waitForClickableElement = async (selector, text) => {
    return new Promise((resolve) => {
      const interval = setInterval(() => {
        const elements = Array.from(document.querySelectorAll(selector));
        const targetElement = elements.find(
          (el) =>
            (el.textContent.trim() === text ||
             el.getAttribute("aria-label") === text || 
             el.getAttribute("data-label") === text) &&
            !el.disabled &&
            !el.classList.contains("disabled")
        );
        if (targetElement) {
          clearInterval(interval);
          resolve(targetElement);
        }
      }, 100);
    });
  };

  const findAndClickElement = async (
    text,
    selector = 'button, a, div, span, td, li, th, label, input'
  ) => {
    console.log(`ЁЯФН р╕Бр╕│р╕ер╕▒р╕Зр╕Др╣Йр╕Щр╕лр╕▓р╕нр╕Зр╕Др╣Мр╕Ыр╕гр╕░р╕Бр╕нр╕Ър╕Чр╕╡р╣Ир╕бр╕╡р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б: "${text}"`);
    const element = await waitForClickableElement(selector, text);
    if (element) {
      if (element.onclick) {
        element.onclick();
        console.log(`тЬЕ р╕Др╕ер╕┤р╕Б "${text}" р╕Фр╣Йр╕зр╕в onclick р╕кр╕│р╣Ар╕гр╣Зр╕И!`);
      } else {
        element.dispatchEvent(new MouseEvent("mousedown", { bubbles: true, cancelable: true }));
        element.dispatchEvent(new MouseEvent("mouseup", { bubbles: true, cancelable: true }));
        element.dispatchEvent(new MouseEvent("click", { bubbles: true, cancelable: true }));
        console.log(`тЬЕ р╕Др╕ер╕┤р╕Б "${text}" р╕Фр╣Йр╕зр╕в dispatchEvent р╕кр╕│р╣Ар╕гр╣Зр╕И!`);
      }
    } else {
      console.warn(`тЪая╕П р╣Др╕бр╣Ир╕Юр╕Ър╕нр╕Зр╕Др╣Мр╕Ыр╕гр╕░р╕Бр╕нр╕Ъ "${text}" р╕лр╕гр╕╖р╕нр╕нр╕Зр╕Др╣Мр╕Ыр╕гр╕░р╕Бр╕нр╕Ър╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Др╕ер╕┤р╕Бр╣Др╕Фр╣Й`);
    }
  };

  (async () => {
    try {
      console.log("ЁЯУН р╕Бр╕│р╕ер╕▒р╕Зр╕гр╕нр╕кр╕▓р╕Вр╕▓...");
      await findAndClickElement("Siam Square", 'div, span, td, li, th, label');
      await new Promise((resolve) => setTimeout(resolve, 100));

      console.log("ЁЯУН р╕Бр╕│р╕ер╕▒р╕Зр╕Бр╕Ф Next...");
      await findAndClickElement("Next", 'button, a');
      await new Promise((resolve) => setTimeout(resolve, 120));

      console.log("ЁЯУН р╕Бр╕│р╕ер╕▒р╕Зр╕гр╕нр╕зр╕▒р╕Щр╕Чр╕╡р╣И...");
      await findAndClickElement("7", 'div, span, td, li, th, label, input , button , a');
      await new Promise((resolve) => setTimeout(resolve, 140));

      console.log("ЁЯУН р╕Бр╕│р╕ер╕▒р╕Зр╕гр╕нр╣Ар╕зр╕ер╕▓...");
      await findAndClickElement("14:30", 'div, span, td, li, th, label, input , button , a');
      await new Promise((resolve) => setTimeout(resolve, 160));

      console.log("ЁЯУН р╕Бр╕│р╕ер╕▒р╕Зр╕гр╕нр╕Ыр╕╕р╣Ир╕б Confirm...");
      await findAndClickElement("Confirm", 'button, a');
      await new Promise((resolve) => setTimeout(resolve, 180));

      console.log("ЁЯУН р╕Бр╕│р╕ер╕▒р╕Зр╕Ир╕нр╕З...");
      await findAndClickElement("Confirm Booking", 'button, a');
      await new Promise((resolve) => setTimeout(resolve, 200));

      console.log("ЁЯОЙ р╕Бр╕гр╕░р╕Ър╕зр╕Щр╕Бр╕▓р╕гр╕Ир╕нр╕Зр╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ!");
      alert("ЁЯОЙ р╕Бр╕▓р╕гр╕Ир╕нр╕Зр╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ!");
      
      if (typeof completion === "function") completion("тЬЕ Booking completed!");
    } catch (error) {
      console.error("ЁЯЪи р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф:", error);
      alert("тЪая╕П р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╕гр╕░р╕лр╕зр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╕Ир╕нр╕З!");
      if (typeof completion === "function") completion("тЭМ Booking failed");
    }
  })();
})();
