document.getElementById("start-btn").addEventListener("click", async () => {
    alert("üöÄ Auto Booking Started!");

    // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ hostname ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏î "www." ‡∏≠‡∏≠‡∏Å (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const hostname = window.location.hostname.replace(/^www\./, "");
    console.log("üåç Current hostname:", hostname);

    // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô GitHub Pages ‚Üí ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡πÄ‡∏ß‡πá‡∏ö Booking
    if (hostname.includes("xarmeriumx.github.io")) {
        console.log("üîÑ [1] ‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô GitHub Pages ‚Üí ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡∏¢‡∏±‡∏á PopMart Booking...");
        alert("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤ Booking...");
        window.location.href = "https://popmartth.rocket-booking.app";
        return;
    }

    // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡πÄ‡∏ß‡πá‡∏ö Booking ‚Üí ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
    if (hostname.includes("popmartth.rocket-booking.app")) {
        console.log("‚úÖ [2] ‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡πÄ‡∏ß‡πá‡∏ö PopMart ‚Üí ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á...");

        try {
            console.log("üõ†Ô∏è [3] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏° 'Used'...");
            await findAndClickElement("Used", 'div, span, td, li, th, label');

            console.log("üõ†Ô∏è [4] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏õ‡∏∏‡πà‡∏° 'Next'...");
            await findAndClickElement("Next", 'button, a');

            console.log("üõ†Ô∏è [5] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà '7'...");
            await findAndClickElement("7", 'div, span, td, li, th, label, input, button, a');

            console.log("üõ†Ô∏è [6] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà '13:30'...");
            await findAndClickElement("13:30", 'div, span, td, li, th, label, input, button, a');

            console.log("üõ†Ô∏è [7] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô 'Confirm'...");
            await findAndClickElement("Confirm", 'button, a');

            console.log("üõ†Ô∏è [8] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° 'Confirm Booking'...");
            await findAndClickElement("Confirm Booking", 'button, a');

            console.log("üéâ [9] ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!");
            alert("üéâ ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!");
        } catch (error) {
            console.error("üö® [ERROR] ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á:", error);
            alert("‚ö†Ô∏è ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà!");
        }

    } else {
        console.warn("üö® [ERROR] Website Not Allowed:", hostname);
        alert("‚õî ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô");
    }
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
const findAndClickElement = async (text, selector = 'button, a, div, span, td, li, th, label, input') => {
    console.log(`üîç [SEARCH] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤: "${text}"...`);
    
    const element = await waitForClickableElement(selector, text);
    if (element) {
        element.click();
        console.log(`‚úÖ [CLICKED] ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: "${text}"`);
    } else {
        throw new Error(`‚ö†Ô∏è [ERROR] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°: "${text}"`);
    }
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏≠‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡πÑ‡∏î‡πâ
const waitForClickableElement = (selector, text) => {
    return new Promise((resolve, reject) => {
        const checkElement = () => {
            const elements = Array.from(document.querySelectorAll(selector));
            return elements.find(el => el.textContent.trim() === text && !el.disabled);
        };

        let targetElement = checkElement();
        if (targetElement) return resolve(targetElement);

        const observer = new MutationObserver(() => {
            targetElement = checkElement();
            if (targetElement) {
                observer.disconnect();
                resolve(targetElement);
            }
        });

        observer.observe(document.body, { childList: true, subtree: true });

        // ‡∏ï‡∏±‡πâ‡∏á Timeout ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏á 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ (‡∏Å‡∏±‡∏ô Loop ‡∏Ñ‡πâ‡∏≤‡∏á)
        setTimeout(() => {
            observer.disconnect();
            reject(new Error(`‚è≥ [TIMEOUT] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° "${text}" ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ`));
        }, 10000);
    });
};
